{"data": [{"id": 0, "name": "\u00bfC\u00f3mo se puede definir una variable opcional en Swift?", "answers": [{"id": "type_a", "value": "var optionalVar: Optional<String>"}, {"id": "type_b", "value": "var optionalVar: String?"}, {"id": "type_c", "value": "var optionalVar = Optional<String>"}, {"id": "type_d", "value": "var optionalVar = String?"}], "code": "var optionalVar: String?", "gistURL": "https://gist.github.com/SwiftBeta/7a9a8a48bc4c77f4eaf6e2a33064d302.js", "correct": "type_b", "explanation": "En Swift, las variables opcionales se definen a\u00f1adiendo un signo de interrogaci\u00f3n despu\u00e9s del tipo de datos.", "created_by": "SwiftBeta_"}, {"id": 1, "name": "\u00bfC\u00f3mo se puede forzar el desempaquetado de una variable opcional en Swift?", "answers": [{"id": "type_a", "value": "optionalVar!"}, {"id": "type_b", "value": "optionalVar.unwrap()"}, {"id": "type_c", "value": "optionalVar??"}, {"id": "type_d", "value": "unwrap(optionalVar)"}], "code": "let unwrappedVar = optionalVar!", "gistURL": "https://gist.github.com/SwiftBeta/64d9d969d95fe6a953baa44465cbbe83.js", "correct": "type_a", "explanation": "En Swift, se puede forzar el desempaquetado de una variable opcional usando el operador de exclamaci\u00f3n.", "created_by": "SwiftBeta_"}, {"id": 2, "name": "\u00bfC\u00f3mo se puede definir una funci\u00f3n en Swift?", "answers": [{"id": "type_a", "value": "func functionName() {}"}, {"id": "type_b", "value": "function functionName() {}"}, {"id": "type_c", "value": "def functionName() {}"}, {"id": "type_d", "value": "functionName() -> {}"}], "code": "func functionName() {}", "gistURL": "https://gist.github.com/SwiftBeta/66fdf992ddd95b8ed8618896893acca9.js", "correct": "type_a", "explanation": "En Swift, las funciones se definen usando la palabra clave 'func', seguida del nombre de la funci\u00f3n y un par de par\u00e9ntesis.", "created_by": "SwiftBeta_"}, {"id": 3, "name": "\u00bfC\u00f3mo se puede definir una clase en Swift?", "answers": [{"id": "type_a", "value": "class ClassName {}"}, {"id": "type_b", "value": "ClassName {}"}, {"id": "type_c", "value": "class ClassName() {}"}, {"id": "type_d", "value": "ClassName() {}"}], "code": "class ClassName {}", "gistURL": "https://gist.github.com/SwiftBeta/e554f579f45a2bff4cdba30172f7ae4f.js", "correct": "type_a", "explanation": "En Swift, las clases se definen usando la palabra clave 'class', seguida del nombre de la clase.", "created_by": "SwiftBeta_"}, {"id": 4, "name": "\u00bfC\u00f3mo se puede definir una estructura en Swift?", "answers": [{"id": "type_a", "value": "struct StructName {}"}, {"id": "type_b", "value": "StructName {}"}, {"id": "type_c", "value": "struct StructName() {}"}, {"id": "type_d", "value": "StructName() {}"}], "code": "struct StructName {}", "gistURL": "https://gist.github.com/SwiftBeta/cbf8baaacaec65808ac62ea72cc4e7a7.js", "correct": "type_a", "explanation": "En Swift, las estructuras se definen usando la palabra clave 'struct', seguida del nombre de la estructura.", "created_by": "SwiftBeta_"}, {"id": 5, "name": "\u00bfC\u00f3mo se puede definir una enumeraci\u00f3n en Swift?", "answers": [{"id": "type_a", "value": "enum EnumName {}"}, {"id": "type_b", "value": "EnumName {}"}, {"id": "type_c", "value": "enum EnumName() {}"}, {"id": "type_d", "value": "EnumName() {}"}], "code": "enum EnumName {}", "gistURL": "https://gist.github.com/SwiftBeta/ce41d7bee931b8acee53feccd1b3ec3a.js", "correct": "type_a", "explanation": "En Swift, las enumeraciones se definen usando la palabra clave 'enum', seguida del nombre de la enumeraci\u00f3n.", "created_by": "SwiftBeta_"}]}