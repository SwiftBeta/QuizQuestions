{"data": [{"id": 0, "name": "\u00bfCu\u00e1l es el resultado de la siguiente expresi\u00f3n?", "answers": [{"id": "type_a", "value": "4"}, {"id": "type_b", "value": "6"}, {"id": "type_c", "value": "8"}, {"id": "type_d", "value": "10"}], "code": "let result = (2 + 2) * 2", "gistURL": "https://gist.github.com/SwiftBeta/15f49460c84bc486b4dcec99d0710d5c.js", "correct": "type_c", "explanation": "La expresi\u00f3n se resuelve como (2 + 2) * 2, lo que nos da 4 * 2, que es igual a 8.", "created_by": "SwiftBeta_"}, {"id": 1, "name": "\u00bfCu\u00e1l es la salida del siguiente c\u00f3digo?", "answers": [{"id": "type_a", "value": "Hello World"}, {"id": "type_b", "value": "Hello, World!"}, {"id": "type_c", "value": "Hello"}, {"id": "type_d", "value": "Error de compilaci\u00f3n"}], "code": "struct Greeting {\n    var text: String\n}\n\nlet greeting = Greeting(text: \"Hello, World!\")\nprint(greeting.text)", "gistURL": "https://gist.github.com/SwiftBeta/7e1f5ff04c26c803191a35a11405a753.js", "correct": "type_b", "explanation": "Se crea una estructura Greeting con una propiedad de texto. Se instancia el objeto greeting con el texto 'Hello, World!' y se imprime, lo que nos da 'Hello, World!'.", "created_by": "SwiftBeta_"}, {"id": 2, "name": "\u00bfQu\u00e9 patr\u00f3n de dise\u00f1o se utiliza com\u00fanmente en UIKit para actualizar la interfaz de usuario?", "answers": [{"id": "type_a", "value": "Singleton"}, {"id": "type_b", "value": "MVC"}, {"id": "type_c", "value": "MVVM"}, {"id": "type_d", "value": "VIPER"}], "code": "", "gistURL": "", "correct": "type_b", "explanation": "El patr\u00f3n de dise\u00f1o com\u00fanmente utilizado en UIKit para actualizar la interfaz de usuario es el Modelo-Vista-Controlador (MVC).", "created_by": "SwiftBeta_"}, {"id": 3, "name": "\u00bfQu\u00e9 m\u00e9todo de UIViewController se llama cuando la vista est\u00e1 a punto de aparecer en pantalla?", "answers": [{"id": "type_a", "value": "viewDidLoad"}, {"id": "type_b", "value": "viewWillAppear"}, {"id": "type_c", "value": "viewDidAppear"}, {"id": "type_d", "value": "viewWillDisappear"}], "code": "", "gistURL": "", "correct": "type_b", "explanation": "El m\u00e9todo viewWillAppear() de UIViewController se llama justo antes de que la vista aparezca en pantalla.", "created_by": "SwiftBeta_"}, {"id": 4, "name": "\u00bfCu\u00e1l es el resultado del siguiente c\u00f3digo?", "answers": [{"id": "type_a", "value": "3"}, {"id": "type_b", "value": "4"}, {"id": "type_c", "value": "5"}, {"id": "type_d", "value": "Error de compilaci\u00f3n"}], "code": "enum Number: Int {\n    case one = 1\n    case two = 2\n    case three = 3\n}\n\nlet number = Number(rawValue: 2)\nprint(number.rawValue + 1)", "gistURL": "https://gist.github.com/SwiftBeta/3fe2d9ba484713365d09abfb0a6b02a9.js", "correct": "type_b", "explanation": "El c\u00f3digo crea un enum llamado Number con casos para 1, 2 y 3. Luego, crea un objeto 'number' con el valor en crudo 2, que corresponde al caso 'two'. Se imprime el valor en crudo m\u00e1s 1, lo que nos da 2 + 1 = 3.", "created_by": "SwiftBeta_"}, {"id": 5, "name": "\u00bfQu\u00e9 modificador de acceso permite que una propiedad o m\u00e9todo sea accesible solo dentro de la misma definici\u00f3n de archivo?", "answers": [{"id": "type_a", "value": "private"}, {"id": "type_b", "value": "fileprivate"}, {"id": "type_c", "value": "internal"}, {"id": "type_d", "value": "public"}], "code": "", "gistURL": "", "correct": "type_b", "explanation": "El modificador de acceso 'fileprivate' permite que una propiedad o m\u00e9todo sea accesible solo dentro de la misma definici\u00f3n de archivo.", "created_by": "SwiftBeta_"}, {"id": 6, "name": "\u00bfQu\u00e9 tipo de objeto se utiliza en Swift para representar una secuencia ordenada de valores?", "answers": [{"id": "type_a", "value": "Set"}, {"id": "type_b", "value": "Dictionary"}, {"id": "type_c", "value": "Array"}, {"id": "type_d", "value": "Tuple"}], "code": "", "gistURL": "", "correct": "type_c", "explanation": "En Swift, se utiliza el tipo de objeto Array para representar una secuencia ordenada de valores.", "created_by": "SwiftBeta_"}, {"id": 7, "name": "\u00bfCu\u00e1l es el resultado del siguiente c\u00f3digo?", "answers": [{"id": "type_a", "value": "1"}, {"id": "type_b", "value": "2"}, {"id": "type_c", "value": "3"}, {"id": "type_d", "value": "Error de compilaci\u00f3n"}], "code": "func sum(_ a: Int, _ b: Int) -> Int {\n    return a + b\n}\n\nprint(sum(1, 2))", "gistURL": "https://gist.github.com/SwiftBeta/d7d45f9db8c9848e84c863d555f0e29f.js", "correct": "type_b", "explanation": "El c\u00f3digo define una funci\u00f3n 'sum' que toma dos argumentos enteros y devuelve la suma. Se llama a la funci\u00f3n con los valores 1 y 2, y se imprime el resultado, que es 1 + 2 = 3.", "created_by": "SwiftBeta_"}, {"id": 8, "name": "\u00bfCu\u00e1l es el prop\u00f3sito del atributo @State en SwiftUI?", "answers": [{"id": "type_a", "value": "Crear una variable de solo lectura"}, {"id": "type_b", "value": "Crear una variable de solo escritura"}, {"id": "type_c", "value": "Crear una variable que puede almacenar valores de cualquier tipo"}, {"id": "type_d", "value": "Crear una fuente \u00fanica de verdad para una vista y sus subvistas"}], "code": "", "gistURL": "", "correct": "type_d", "explanation": "El atributo @State en SwiftUI se utiliza para crear una fuente \u00fanica de verdad para una vista y sus subvistas, lo que permite el almacenamiento y la actualizaci\u00f3n de datos mutable en estructuras inmutables.", "created_by": "SwiftBeta_"}, {"id": 9, "name": "\u00bfQu\u00e9 m\u00e9todo se utiliza en Combine para transformar un Publisher en otro Publisher?", "answers": [{"id": "type_a", "value": "flatMap"}, {"id": "type_b", "value": "map"}, {"id": "type_c", "value": "scan"}, {"id": "type_d", "value": "reduce"}], "code": "", "gistURL": "", "correct": "type_a", "explanation": "El m\u00e9todo 'flatMap' en Combine se utiliza para transformar un Publisher en otro Publisher, permitiendo la transformaci\u00f3n y manipulaci\u00f3n de los datos publicados.", "created_by": "SwiftBeta_"}]}