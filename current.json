{"data": [{"id": 0, "name": "\u00bfQu\u00e9 framework permite crear interfaces de usuario para aplicaciones en iOS, macOS, watchOS y tvOS?", "answers": [{"id": "type_a", "value": "SwiftUI"}, {"id": "type_b", "value": "UIKit"}, {"id": "type_c", "value": "Combine"}, {"id": "type_d", "value": "Xcode"}], "code": "", "gistURL": "", "correct": "type_a", "explanation": "SwiftUI es el framework de Apple para dise\u00f1ar interfaces de usuario en todas las plataformas de Apple de forma declarativa.", "created_by": "SwiftBeta_"}, {"id": 1, "name": "\u00bfQu\u00e9 palabra clave se utiliza para crear una funci\u00f3n que contiene c\u00f3digo as\u00edncrono?", "answers": [{"id": "type_a", "value": "defer"}, {"id": "type_b", "value": "async"}, {"id": "type_c", "value": "await"}, {"id": "type_d", "value": "concurrent"}], "code": "", "gistURL": "", "correct": "type_b", "explanation": "La palabra clave 'async' se utiliza para marcar una funci\u00f3n que contiene c\u00f3digo as\u00edncrono y permite su ejecuci\u00f3n sin bloquear el hilo principal.", "created_by": "SwiftBeta_"}, {"id": 2, "name": "\u00bfCu\u00e1l es la clase base para crear una interfaz de usuario en UIKit?", "answers": [{"id": "type_a", "value": "ViewController"}, {"id": "type_b", "value": "UIView"}, {"id": "type_c", "value": "UIController"}, {"id": "type_d", "value": "NSObject"}], "code": "", "gistURL": "", "correct": "type_b", "explanation": "UIView es la clase base para crear elementos de interfaz de usuario en UIKit, como botones, etiquetas, etc.", "created_by": "SwiftBeta_"}, {"id": 3, "name": "\u00bfC\u00f3mo se combina y transforma el resultado de dos Publisher en Combine?", "answers": [{"id": "type_a", "value": "flatMap"}, {"id": "type_b", "value": "map"}, {"id": "type_c", "value": "combineLatest"}, {"id": "type_d", "value": "zip"}], "code": "", "gistURL": "", "correct": "type_c", "explanation": "combineLatest combina y transforma el resultado de dos Publisher en Combine. Emitir\u00e1 un nuevo evento cada vez que uno de los Publishers emita un evento.", "created_by": "SwiftBeta_"}, {"id": 4, "name": "\u00bfQu\u00e9 modificador se utiliza en SwiftUI para cambiar el aspecto de un bot\u00f3n?", "answers": [{"id": "type_a", "value": ".background"}, {"id": "type_b", "value": ".foregroundColor"}, {"id": "type_c", "value": ".shadow"}, {"id": "type_d", "value": ".buttonStyle"}], "code": "Button(action: {}) {\n    Text(\"Tap me\")\n}.buttonStyle(RoundedRectangleButtonStyle())", "gistURL": "https://gist.github.com/SwiftBeta/4fcaf3304bbae8ba7e619be627e59040.js", "correct": "type_d", "explanation": "El modificador .buttonStyle se utiliza en SwiftUI para aplicar un estilo personalizado a un bot\u00f3n.", "created_by": "SwiftBeta_"}, {"id": 5, "name": "\u00bfQu\u00e9 m\u00e9todo se utiliza para ejecutar c\u00f3digo antes de que el objeto de la vista se elimine de la jerarqu\u00eda de un controlador de vista?", "answers": [{"id": "type_a", "value": "viewDidLoad"}, {"id": "type_b", "value": "viewDidDisappear"}, {"id": "type_c", "value": "viewWillAppear"}, {"id": "type_d", "value": "viewWillDisappear"}], "code": "override func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n    // C\u00f3digo a ejecutar\n}", "gistURL": "https://gist.github.com/SwiftBeta/bbeea6829d236017e667d6bf2ebcb980.js", "correct": "type_d", "explanation": "viewWillDisappear se llama antes de que el objeto de la vista se elimine de la jerarqu\u00eda de un controlador de vista y permite ejecutar c\u00f3digo en ese momento.", "created_by": "SwiftBeta_"}, {"id": 6, "name": "\u00bfC\u00f3mo se crea una lista en SwiftUI?", "answers": [{"id": "type_a", "value": "ForEach"}, {"id": "type_b", "value": "List"}, {"id": "type_c", "value": "ScrollView"}, {"id": "type_d", "value": "VStack"}], "code": "List(items) { item in\n    Text(item.title)\n}", "gistURL": "https://gist.github.com/SwiftBeta/d5e51bc5de0f9ccf033689ae4f791c81.js", "correct": "type_b", "explanation": "En SwiftUI, una lista se crea usando el elemento List y mostrando el contenido con una closure.", "created_by": "SwiftBeta_"}, {"id": 7, "name": "\u00bfQu\u00e9 objeto se utiliza para almacenar las propiedades de un proyecto en Xcode?", "answers": [{"id": "type_a", "value": "Scheme"}, {"id": "type_b", "value": "Info.plist"}, {"id": "type_c", "value": "Build Settings"}, {"id": "type_d", "value": "Targets"}], "code": "", "gistURL": "", "correct": "type_b", "explanation": "Info.plist es un archivo clave-valor en formato XML que se utiliza para almacenar las propiedades de configuraci\u00f3n de un proyecto (app) en Xcode.", "created_by": "SwiftBeta_"}, {"id": 8, "name": "\u00bfQu\u00e9 librer\u00eda de terceros se utiliza com\u00fanmente para descargar im\u00e1genes de forma as\u00edncrona en las aplicaciones de iOS?", "answers": [{"id": "type_a", "value": "AlamofireImage"}, {"id": "type_b", "value": "Kingfisher"}, {"id": "type_c", "value": "SDWebImage"}, {"id": "type_d", "value": "FirebaseUI"}], "code": "", "gistURL": "", "correct": "type_c", "explanation": "SDWebImage es una biblioteca de terceros que permite descargar im\u00e1genes de forma as\u00edncrona y las almacena en cach\u00e9 para optimizar el rendimiento.", "created_by": "SwiftBeta_"}, {"id": 9, "name": "\u00bfQu\u00e9 patr\u00f3n de dise\u00f1o permite a SwiftUI enviar y recibir eventos?", "answers": [{"id": "type_a", "value": "MVVM"}, {"id": "type_b", "value": "MVC"}, {"id": "type_c", "value": "Observer"}, {"id": "type_d", "value": "Singleton"}], "code": "", "gistURL": "", "correct": "type_c", "explanation": "El patr\u00f3n Observer es utilizado por SwiftUI para enviar y recibir eventos a trav\u00e9s de objetos de estado, propiedades publicadas y controles de enlace.", "created_by": "SwiftBeta_"}]}