{"data": [{"id": 0, "name": "\u00bfCu\u00e1l es el resultado de la siguiente funci\u00f3n?", "answers": [{"id": "type_a", "value": "4"}, {"id": "type_b", "value": "5"}, {"id": "type_c", "value": "6"}, {"id": "type_d", "value": "Error de compilaci\u00f3n"}], "code": "func sum(_ a: Int, _ b: Int? = 3) -> Int {\n    return a + (b ?? 0)\n}\n\nlet result = sum(2)", "gistURL": "https://gist.github.com/SwiftBeta/c4a1eed3004e1af84b1b6af52492485d.js", "correct": "type_b", "explanation": "La funci\u00f3n sum tiene un par\u00e1metro opcional b con un valor predeterminado de 3. Si no se proporciona, se utilizar\u00e1 3. Por lo tanto, la funci\u00f3n devuelve 2 + 3 = 5.", "created_by": "SwiftBeta_"}, {"id": 1, "name": "\u00bfC\u00f3mo se declara un protocolo en Swift?", "answers": [{"id": "type_a", "value": "class MyProtocol {}"}, {"id": "type_b", "value": "enum MyProtocol {}"}, {"id": "type_c", "value": "struct MyProtocol {}"}, {"id": "type_d", "value": "protocol MyProtocol {}"}], "code": "", "gistURL": "", "correct": "type_d", "explanation": "En Swift, los protocolos se definen utilizando la palabra clave 'protocol'. Por ejemplo, 'protocol MyProtocol {}'.", "created_by": "SwiftBeta_"}, {"id": 2, "name": "\u00bfCu\u00e1l es la salida de este c\u00f3digo?", "answers": [{"id": "type_a", "value": "1, 3, 5"}, {"id": "type_b", "value": "2, 4, 6"}, {"id": "type_c", "value": "1, 2, 3, 4, 5, 6"}, {"id": "type_d", "value": "Error de compilaci\u00f3n"}], "code": "let numbers = [1, 2, 3, 4, 5, 6]\nlet oddNumbers = numbers.filter { $0 % 2 == 1 }\nprint(oddNumbers)", "gistURL": "https://gist.github.com/SwiftBeta/e174cae9f46d9804bbaba2a6375e101d.js", "correct": "type_a", "explanation": "La funci\u00f3n filter devuelve un nuevo array que contiene solo los elementos que cumplen con la condici\u00f3n especificada. En este caso, se imprimen solo los n\u00fameros impares: 1, 3, 5.", "created_by": "SwiftBeta_"}, {"id": 3, "name": "\u00bfCu\u00e1l es el prop\u00f3sito de la funci\u00f3n flatMap en Swift?", "answers": [{"id": "type_a", "value": "Aplicar una funci\u00f3n a cada elemento y aplanar el resultado"}, {"id": "type_b", "value": "Filtrar elementos de un array"}, {"id": "type_c", "value": "Reducir un array a un solo valor"}, {"id": "type_d", "value": "Ordenar elementos de un array"}], "code": "", "gistURL": "", "correct": "type_a", "explanation": "La funci\u00f3n flatMap se utiliza para aplicar una funci\u00f3n a cada elemento de una secuencia y aplanar el resultado en una sola secuencia.", "created_by": "SwiftBeta_"}, {"id": 4, "name": "\u00bfQu\u00e9 hace el siguiente c\u00f3digo?", "answers": [{"id": "type_a", "value": "Lanza un error en tiempo de ejecuci\u00f3n"}, {"id": "type_b", "value": "Imprime 'Optional(42)'"}, {"id": "type_c", "value": "Imprime '42'"}, {"id": "type_d", "value": "Error de compilaci\u00f3n"}], "code": "let number: Int? = 42\nprint(number)", "gistURL": "https://gist.github.com/SwiftBeta/aa47a8026ed5bbefbf301a37d94f4f24.js", "correct": "type_b", "explanation": "La variable 'number' es un opcional de tipo Int. Al imprimir la variable, se muestra 'Optional(42)'.", "created_by": "SwiftBeta_"}, {"id": 5, "name": "\u00bfQu\u00e9 es un didSet en Swift?", "answers": [{"id": "type_a", "value": "Un tipo de dato"}, {"id": "type_b", "value": "Un bucle"}, {"id": "type_c", "value": "Un observador de propiedad"}, {"id": "type_d", "value": "Un tipo de acceso"}], "code": "", "gistURL": "", "correct": "type_c", "explanation": "En Swift, didSet es un observador de propiedad que se ejecuta despu\u00e9s de que se haya cambiado el valor de una propiedad.", "created_by": "SwiftBeta_"}, {"id": 6, "name": "\u00bfCu\u00e1l es el resultado de este c\u00f3digo?", "answers": [{"id": "type_a", "value": "4"}, {"id": "type_b", "value": "5"}, {"id": "type_c", "value": "6"}, {"id": "type_d", "value": "Error de compilaci\u00f3n"}], "code": "enum Number: Int {\n    case one = 1, two, three, four, five\n}\n\nlet result = Number.five.rawValue", "gistURL": "https://gist.github.com/SwiftBeta/9401f91b04215ae49bc1b067c220666b.js", "correct": "type_b", "explanation": "El valor raw de 'Number.five' es 5. Cuando se asigna un valor raw a un caso en una enumeraci\u00f3n, los casos siguientes se incrementan autom\u00e1ticamente en 1.", "created_by": "SwiftBeta_"}, {"id": 7, "name": "\u00bfCu\u00e1l es la salida de este c\u00f3digo?", "answers": [{"id": "type_a", "value": "Error de compilaci\u00f3n"}, {"id": "type_b", "value": "1, 4, 9"}, {"id": "type_c", "value": "1, 2, 3"}, {"id": "type_d", "value": "1, 8, 27"}], "code": "let numbers = [1, 2, 3]\nlet squares = numbers.map { $0 * $0 }\nprint(squares)", "gistURL": "https://gist.github.com/SwiftBeta/631499839df358025a0d77898e9ca309.js", "correct": "type_b", "explanation": "La funci\u00f3n map se utiliza para aplicar una funci\u00f3n a cada elemento de una secuencia. En este caso, se calcula el cuadrado de cada n\u00famero y se imprime: 1, 4, 9.", "created_by": "SwiftBeta_"}, {"id": 8, "name": "\u00bfQu\u00e9 es un ViewBuilder en SwiftUI?", "answers": [{"id": "type_a", "value": "Un componente de IU para construir vistas"}, {"id": "type_b", "value": "Un atributo para simplificar la creaci\u00f3n de vistas"}, {"id": "type_c", "value": "Un tipo de layout"}, {"id": "type_d", "value": "Una funci\u00f3n para construir vistas personalizadas"}], "code": "", "gistURL": "", "correct": "type_b", "explanation": "ViewBuilder es un atributo de funci\u00f3n en SwiftUI que permite simplificar la creaci\u00f3n de vistas utilizando un DSL (Domain Specific Language) m\u00e1s conciso y expresivo.", "created_by": "SwiftBeta_"}, {"id": 9, "name": "\u00bfQu\u00e9 hace la siguiente declaraci\u00f3n en Swift?", "answers": [{"id": "type_a", "value": "Crea una constante"}, {"id": "type_b", "value": "Crea una variable"}, {"id": "type_c", "value": "Crea una funci\u00f3n"}, {"id": "type_d", "value": "Crea un closure"}], "code": "let number = 42", "gistURL": "https://gist.github.com/SwiftBeta/0880762285744048d8908104eece3a33.js", "correct": "type_a", "explanation": "La declaraci\u00f3n 'let number = 42' crea una constante llamada 'number' con el valor 42.", "created_by": "SwiftBeta_"}]}